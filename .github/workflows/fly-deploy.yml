name: Fly Deploy
on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  deploy:
    name: Deploy app
    runs-on: ubuntu-latest
    env:
      FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
    concurrency: deploy-group
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: false
          
      - name: Configure Git
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          
      - name: Update Submodules
        run: |
          # Define submodule paths
          SUBMODULES=("src/modules/library")
          
          # Get root directory
          ROOT_DIR=$(pwd)
          
          # Initialize submodules
          git submodule init
          git submodule update
          
          # Loop through each submodule
          for submodule in "${SUBMODULES[@]}"; do
            echo "Processing submodule: $submodule"
            
            if [ ! -d "$submodule" ]; then
              echo "Creating directory: $submodule"
              mkdir -p "$submodule"
            fi
            
            # Enter submodule directory
            cd "$ROOT_DIR/$submodule" || exit 1
            
            echo "Current directory: $(pwd)"
            
            # Configure git locally for the submodule
            git config user.email "github-actions[bot]@users.noreply.github.com"
            git config user.name "github-actions[bot]"
            
            # Fetch and checkout latest main
            git fetch origin main
            git checkout main
            git pull origin main
            
            # Return to root
            cd "$ROOT_DIR" || exit 1
            
            # Update the parent repo's reference
            git add "$submodule"
            git commit -m "Update submodule $submodule to latest main" || echo "No changes to commit for $submodule"
          done
            
      - uses: superfly/flyctl-actions/setup-flyctl@master
      - run: flyctl deploy --remote-only